{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;AACF,2BAAa;AAAA;AAAE;;;;sCAGDC,G,EAAI;AACd,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AACL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;AAGH;;;6BAEKJ,G,EAAKK,I,EAAM;AAAA;;AACb,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAU,EAAC,gBAAiB,kBAAlB,EADI;AAEdC,wBAAS,MAFK;AAGdC,sBAAOC,KAAKC,SAAL,CAAeL,IAAf;AAHO,aAAX,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["class HttpService {\n    constructor(){}\n\n    \n    _handleErrors(res){\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n    \n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    post (url, dado) {\n        return fetch(url, {\n            headers : {\"Content-Type\" : \"application/json\"},\n            method : \"POST\",\n            body : JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n    }\n}"]}