{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoDao","Negociacao","ConnectionFactory","HttpService","NegociacaoService","_HttpService","Promise","all","_importarNegociacoesDaSemana","_importarNegociacoesDaSemanaAnterior","_importarNegociacoesDaSemanaRetrasada","then","negociacoes","negociacoesSemanas","reduce","flatArray","concat","map","Date","negociacao","data","quantidade","valor","catch","Error","error","listaAtual","obterNegociacoes","filter","some","equals","negociacaoLista","console","log","getConnection","connection","dao","adiciona","errorMessage","apagarTodos","get","objeto"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {HttpService} from './HttpService';\n\nexport class NegociacaoService {\n\n    constructor(){\n        this._HttpService = new HttpService();\n    }\n\n    obterNegociacoes(){\n        return Promise.all([\n                this._importarNegociacoesDaSemana(),\n                this._importarNegociacoesDaSemanaAnterior(),\n                this._importarNegociacoesDaSemanaRetrasada()]\n            )\n            .then(negociacoesSemanas => {\n                let negociacoes = negociacoesSemanas.reduce((flatArray, negociacoes) => flatArray.concat(negociacoes), [])\n                    .map(negociacao => new Negociacao(new Date(negociacao.data), negociacao.quantidade, negociacao.valor));\n                return negociacoes;\n            }).catch(error => {\n                throw new Error(error)\n            });\n    }\n\n    importa(listaAtual){\n        return this.obterNegociacoes()\n                .then(negociacoes => \n                    negociacoes.filter(negociacao => \n                        !listaAtual.some( negociacaoLista => \n                            negociacao.equals(negociacaoLista))))\n                .catch(error => {\n                    console.log(error);\n                    throw new Error(\"Não foi possível recuperar as negociações\");\n                });\n    }\n\n    adiciona(negociacao){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => \"Negociação adicionada com sucesso!\")\n            .catch(errorMessage => {\n                console.log(errorMessage);\n                throw new Error(\"Não foi possível adicionar a negociação!\");\n            });\n    }\n\n    apagar(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagarTodos())\n            .then(message => \"Negociações apagadas com sucesso!\")\n            .catch(errorMessage => {\n                console.log(errorMessage);\n                throw new Error(\"Não foi possível apagar as negociações!\");\n            });\n    }    \n\n    _importarNegociacoesDaSemana(){\n        return  this._HttpService.get(\"/negociacoes/semana\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch((error) => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana.\")\n            });\n    }\n\n    _importarNegociacoesDaSemanaAnterior(){\n        return this._HttpService.get(\"/negociacoes/anterior\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch(() => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana passada.\")\n            });\n    }\n\n    _importarNegociacoesDaSemanaRetrasada(){\n        return this._HttpService.get(\"/negociacoes/retrasada\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch(() => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana retrasada.\")\n            });\n    }\n}"]}