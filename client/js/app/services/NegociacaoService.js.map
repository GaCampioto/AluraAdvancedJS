{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_HttpService","HttpService","Promise","all","_importarNegociacoesDaSemana","_importarNegociacoesDaSemanaAnterior","_importarNegociacoesDaSemanaRetrasada","then","negociacoes","negociacoesSemanas","reduce","flatArray","concat","map","Negociacao","Date","negociacao","data","quantidade","valor","catch","Error","error","listaAtual","obterNegociacoes","filter","some","equals","negociacaoLista","console","log","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","errorMessage","apagarTodos","get","objeto"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\n\n    constructor(){\n        this._HttpService = new HttpService();\n    }\n\n    obterNegociacoes(){\n        return Promise.all([\n                this._importarNegociacoesDaSemana(),\n                this._importarNegociacoesDaSemanaAnterior(),\n                this._importarNegociacoesDaSemanaRetrasada()]\n            )\n            .then(negociacoesSemanas => {\n                let negociacoes = negociacoesSemanas.reduce((flatArray, negociacoes) => flatArray.concat(negociacoes), [])\n                    .map(negociacao => new Negociacao(new Date(negociacao.data), negociacao.quantidade, negociacao.valor));\n                return negociacoes;\n            }).catch(error => {\n                throw new Error(error)\n            });\n    }\n\n    importa(listaAtual){\n        return this.obterNegociacoes()\n                .then(negociacoes => \n                    negociacoes.filter(negociacao => \n                        !listaAtual.some( negociacaoLista => \n                            negociacao.equals(negociacaoLista))))\n                .catch(error => {\n                    console.log(error);\n                    throw new Error(\"Não foi possível recuperar as negociações\");\n                });\n    }\n\n    adiciona(negociacao){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => \"Negociação adicionada com sucesso!\")\n            .catch(errorMessage => {\n                console.log(errorMessage);\n                throw new Error(\"Não foi possível adicionar a negociação!\");\n            });\n    }\n\n    apagar(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagarTodos())\n            .then(message => \"Negociações apagadas com sucesso!\")\n            .catch(errorMessage => {\n                console.log(errorMessage);\n                throw new Error(\"Não foi possível apagar as negociações!\");\n            });\n    }    \n\n    _importarNegociacoesDaSemana(){\n        return  this._HttpService.get(\"/negociacoes/semana\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch((error) => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana.\")\n            });\n    }\n\n    _importarNegociacoesDaSemanaAnterior(){\n        return this._HttpService.get(\"/negociacoes/anterior\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch(() => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana passada.\")\n            });\n    }\n\n    _importarNegociacoesDaSemanaRetrasada(){\n        return this._HttpService.get(\"/negociacoes/retrasada\")\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            })\n            .catch(() => {\n                console.log(error)\n                throw new Error(\"Não foi possível recuperar as negociações da semana retrasada.\")\n            });\n    }\n}"]}